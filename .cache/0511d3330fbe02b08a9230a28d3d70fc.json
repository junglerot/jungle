{"dependencies":[{"name":"/Users/carboncopy/Sites/Play/tippyjs/package.json","includedInParent":true,"mtime":1521341054336},{"name":"/Users/carboncopy/Sites/Play/tippyjs/.babelrc","includedInParent":true,"mtime":1521337127476},{"name":"/Users/carboncopy/Sites/Play/tippyjs/node_modules/readable-stream/package.json","includedInParent":true,"mtime":1491029643000},{"name":"./_stream_transform","loc":{"line":9,"column":24}},{"name":"core-util-is","loc":{"line":12,"column":19}},{"name":"inherits","loc":{"line":13,"column":24}}],"generated":{"js":"// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","map":{"mappings":[{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/readable-stream/lib/_stream_passthrough.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../../node_modules/readable-stream/lib/_stream_passthrough.js":"// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};"},"lineCount":26}},"hash":"a6d1418a2f30c82a47c15a676a9cc7f9","cacheData":{"env":{}}}